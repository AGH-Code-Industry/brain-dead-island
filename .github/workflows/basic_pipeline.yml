name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache apt
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libsdl2-gfx-dev gcc

      - name: rust-toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build

      - name: Test
        run: cargo test --all-features
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo clippy

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        env:
          cache-name: tarpaulin
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-${{ env.cache-name }}-
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libsdl2-gfx-dev gcc
      - run: if ls ~/.cargo/bin/ | grep -q "^cargo-tarpaulin" ; then echo "cargo-tarpaulin is already installed"; else cargo install cargo-tarpaulin; fi
      - run: cargo tarpaulin --ignore-tests
